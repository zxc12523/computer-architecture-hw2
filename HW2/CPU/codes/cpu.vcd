$date
	Mon Oct 31 11:56:58 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module cpu $end
$var wire 1 ! i_clk $end
$var wire 64 " i_d_data [63:0] $end
$var wire 1 # i_d_valid_data $end
$var wire 32 $ i_i_inst [31:0] $end
$var wire 1 % i_i_valid_inst $end
$var wire 1 & i_rst_n $end
$var wire 1 ' o_d_MemRead $end
$var wire 1 ( o_d_MemWrite $end
$var wire 64 ) o_d_addr [63:0] $end
$var wire 64 * o_d_data [63:0] $end
$var wire 1 + o_finish $end
$var wire 64 , o_i_addr [63:0] $end
$var wire 1 - o_i_valid_addr $end
$var reg 3 . fun3 [2:0] $end
$var reg 7 / fun7 [6:0] $end
$var reg 13 0 imm [12:0] $end
$var reg 1 1 o_d_MemRead_r $end
$var reg 1 2 o_d_MemWrite_r $end
$var reg 64 3 o_d_addr_r [63:0] $end
$var reg 64 4 o_d_data_r [63:0] $end
$var reg 1 5 o_finish_r $end
$var reg 64 6 o_i_addr_r [63:0] $end
$var reg 1 7 o_i_valid_addr_r $end
$var reg 7 8 opcode [6:0] $end
$var reg 5 9 rd [4:0] $end
$var reg 5 : rs1 [4:0] $end
$var reg 5 ; rs2 [4:0] $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx ;
bx :
bx 9
bx 8
x7
bx 6
x5
bx 4
bx 3
x2
x1
bx 0
bx /
bx .
x-
bz ,
x+
bz *
bz )
x(
x'
z&
z%
bz $
z#
bz "
z!
$end
